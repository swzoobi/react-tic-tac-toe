{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","key","this","squares","position","map","p","square","item","j","renderSquare","React","Component","Game","state","history","Array","fill","row","col","xIsNext","stepNumber","curRow","curCol","r","length","c","slice","getWinner","setState","concat","winLine","l","a","b","step","status","current","winner","moves","move","desc","btnStyle","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f526d616.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/*\r\n    //对于只有render函数的组件，也不包含state，可改写成函数组件\r\n\r\nclass Square extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <button className=\"square\" \r\n            onClick={() => {this.props.onClick()}}>\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  } */\r\n\r\n  function Square(props){\r\n    \r\n      return (\r\n        <button className=\"square\" \r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n      )\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square key={i}\r\n              value={this.props.squares[i]}\r\n              onClick={() => this.props.onClick(i)}\r\n            />\r\n          );\r\n    }\r\n  \r\n    render() {\r\n\r\n      let position = this.props.position;\r\n      let squares = position.map( (p,i) =>{\r\n        let square  = p.map((item,j) => {\r\n          return(\r\n            this.renderSquare(3*i+j)\r\n          )\r\n        })\r\n\r\n        return (\r\n          <div className=\"board-row\" key={i}>\r\n            {square}\r\n          </div>\r\n        )\r\n      })\r\n\r\n  \r\n      return (\r\n        <div>\r\n          {squares}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        position:[\r\n          [0,1,2],\r\n          [3,4,5],\r\n          [6,7,8]\r\n        ],\r\n        history:[\r\n          {\r\n            squares:new Array(9).fill(null),\r\n            row: null,\r\n            col: null\r\n          }\r\n        ],\r\n        xIsNext:true,\r\n        stepNumber: 0,\r\n      }\r\n    }\r\n\r\n    handleClick(i){\r\n      const position = this.state.position;\r\n      let curRow,curCol;\r\n      for(let r = 0;r < position.length;r++){\r\n        let col = position[r];\r\n        for(let c = 0;c < col.length; c++){\r\n          if(i === col[c]){\r\n            curRow = r;\r\n            curCol = c;\r\n          }\r\n        }\r\n      }\r\n\r\n      const history = this.state.history.slice(0,this.state.stepNumber+1);//历史记录\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice()\r\n\r\n      if(this.getWinner(squares) || squares[i] ) return; //有获胜方 或者 当前格子已经落子\r\n\r\n      squares[i] = this.state.xIsNext? 'X' : \"O\";\r\n\r\n      this.setState({\r\n          history:history.concat([{\r\n            squares:squares,\r\n            row: curRow,\r\n            col: curCol\r\n          }]),\r\n          stepNumber: history.length,\r\n          xIsNext: !this.state.xIsNext\r\n      })\r\n\r\n    }\r\n\r\n\r\n    getWinner(squares){\r\n      let winLine = [\r\n          [0,1,2],// 第一行\r\n          [3,4,5],// 第二行\r\n          [6,7,8],// 第三行\r\n          [0,3,6],// 第一列\r\n          [1,4,7],// 第二列\r\n          [2,5,8],// 第三列\r\n          [0,4,8],// 左上到右下\r\n          [2,4,6] // 右上到左下\r\n      ]\r\n      for(let l = 0; l < winLine.length; l++){\r\n          let [a,b,c] = winLine[l];\r\n          if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n              return squares[a];\r\n          }\r\n          \r\n      }\r\n      return null;\r\n\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step%2) === 0\r\n      })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const {history,stepNumber} = this.state;\r\n      const current = history[this.state.stepNumber] //当前步骤\r\n      const winner = this.getWinner(current.squares);\r\n\r\n      // 历史记录按钮\r\n\r\n      const moves = history.map( (step, move) => {\r\n        let desc = move === 0?\r\n                  'move to start' :\r\n                  'move to #' + move + ' (' + step.row + ',' + step.col + ')';\r\n        let btnStyle = move === stepNumber? 'active' : ''\r\n\r\n        return (\r\n          <li key={move}>\r\n            <button className={btnStyle} onClick={ () => {this.jumpTo(move)}}>{desc}</button>\r\n          </li>\r\n        )\r\n      })\r\n      \r\n      let status ;\r\n      if(winner){\r\n        status =  'Winner is: ' + winner;\r\n      }else if(stepNumber !== 9){\r\n        status = 'Next player is: ' + (this.state.xIsNext?'X':'O')\r\n      }else{\r\n        status = 'No Winner'\r\n      }\r\n      \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              position={this.state.position}\r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}